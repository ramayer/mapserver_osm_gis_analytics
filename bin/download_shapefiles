#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/default_environment.sh

shapefiledir=$INSTALL_DIR/etc/mapserver/shapefiles

function load_shapefile {
   url=$1
   shapefilename=$2
   tablename=$3
   srid=$4

   zipfile=$GIS_DATA_DIR/shapefiles/`echo $url | perl -pe 's/https?:\/\///'`

   if [ -f $zipfile ];
   then
       echo "already had $zipfile"
   else
       echo "need $zipfile"
       cd $GIS_DATA_DIR/shapefiles
       wget -N -x $url
   fi

   shapefile=$shapefiledir/$shapefilename

   if [ -f $shapefile ];
   then
       echo already had $shapefile
   else
       mkdir -p $shapefiledir
       unzip -n -j $zipfile -d $shapefiledir
   fi

   if ( psql -h localhost gis gis -q -c "COPY (select table_catalog,table_name from information_schema.tables where table_name='$tablename') to stdout csv header"  | grep -qw $tablename ); 
   then
      echo "Already had table $tablename"
   else
      echo "Missing database table $tablename for $shapefile"
      mkdir -p /tmp/shp2pgsql
      shp2pgsql -I -s $srid $shapefile > /tmp/shp2pgsql/$tablename.sql
      psql -q < /tmp/shp2pgsql/$tablename.sql
   fi

}

load_shapefile http://data.openstreetmapdata.com/land-polygons-split-3857.zip  land_polygons.shp land_polygons 3857
load_shapefile http://data.openstreetmapdata.com/simplified-land-polygons-complete-3857.zip simplified_land_polygons.shp simplified_land_polygons  3857
load_shapefile http://www2.census.gov/geo/tiger/GENZ2014/shp/cb_2014_us_state_20m.zip cb_2014_us_state_20m.shp cb_2014_us_state_20m 4269

# If, instead of loading the shapefile into the database, we want MapServer to render it directly ...
# Note that the shapefile cb_2014_us_state_20m.shp can not be used directly by mapserver,
# but if converted to another shapefile with the same information using ogr2ogr, it works.

[ -f $shapefiledir/states.shp ] || ogr2ogr -f "ESRI Shapefile"  $shapefiledir/states.shp  $shapefiledir/cb_2014_us_state_20m.shp
