#!/bin/bash

optspec=":hv-:"
environment=""
resourcegroup=""
azure_public_key=~/.ssh/id_rsa.pub

linuximg=Canonical:UbuntuServer:16.04.0-LTS:16.04.201604203
windowsimg=MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:4.0.20150825
azure_region='westus'

mkdir -p ~/.azure/

function show_usage {
    echo "usage:" >&2
    echo "     $0 --resource-group=<group> --azure-region=<region>" >&2
    echo "note:" >&2
    echo "  This script assumes a resource group configured in a way that matches"
    echo "  that from the create_azure_environment script"
    echo "examples:"  >&2
    echo "     $0 --resource-group=map-test"
    exit 2
}


while getopts "$optspec" optchar; do
    case "${optchar}" in
        -)
            case "${OPTARG}" in
                enabled)
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                resource-group=*)
                    val=${OPTARG#*=}
                    opt=${OPTARG%=$val}
                    resourcegroup=$val
                    ;;
                azure-acct=*)
                    val=${OPTARG#*=}
                    opt=${OPTARG%=$val}
                    azure_acct=$val
                    ;;
                azure-region=*)
                    val=${OPTARG#*=}
                    opt=${OPTARG%=$val}
                    azure_region=$val
                    ;;
                *)
                    if [ "$OPTERR" = 1 ] && [ "${optspec:0:1}" != ":" ]; then
                        echo "Unknown option --${OPTARG}" >&2
                    fi
                    ;;
            esac;;
        h)
            show_usage
            exit 2
            ;;
        v)
            echo "Parsing option: '-${optchar}'" >&2
            ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            ;;
    esac
done

if [ "$resourcegroup" = "" ]; then
    echo "ERROR: --resource-group=<name> required" >&2
    show_usage
    exit 2
fi


set -x

azure='/usr/bin/time azure'
now=`date +'%Y%m%d%T' | perl -pe 's/://g'` 
nic_name="www-"$now
pub_ip_name="www-"$now
vm_name="mapcache-"$now
adm_vm_size=Standard_D1
web_vm_size=Standard_D1
app_vm_size=Standard_D1_v2
db_vm_size=Standard_DS12

$azure network public-ip create $resourcegroup $pub_ip_name $azure_region
$azure network nic create $resourcegroup $nic_name $azure_region --subnet-vnet-name "gis-vnet" --subnet-name "gis-www-subnet" --public-ip-name $pub_ip_name
$azure vm create $resourcegroup $vm_name   $azure_region "Linux"   -z $web_vm_size -N $nic_name -u gisadmin -Q $linuximg --ssh-publickey-file $azure_public_key    
$azure vm disk attach-new -g $resourcegroup $vm_name -z 500 
$azure vm disk attach-new -g $resourcegroup $vm_name -z 500 

# TODO: for the map tiles, figure out how to automate this part: 
#
#  git clone https://github.com/Azure/azure-quickstart-templates
#  sudo bash azure-quickstart-templates/shared_scripts/ubuntu/vm-disk-utils-0.1.sh -s
#  [ assume that created /datadisks/disk1 on /dev/md0]
#
# but then we need to re-format it with more inodes like:
#
#   sudo umount /datadisks/disk1
#   sudo dd if=/dev/zero of=/dev/md0 bs=1000 count=10
#   sudo mkfs.ext4 -i 4096 /dev/md0
#   sudo mount /dev/md0 /datadisks/disk1
#   sudo mkdir -p /datadisks/disk1/cache/mapcache
#   sudo chown www-data /datadisks/disk1/cache/mapcache
#   sudo rm -rf /var/cache/mapcache
#   sudo ln -s /datadisks/disk1/cache/mapcache /var/cache/mapcache

# TODO
#   To generate the nationwide-spotcrime-dot-map, the mapserver VMs need 
#   much more than the 3.4 GB RAM that the cheap Azure VMs have.
#
#   Each spotcrime tile at zoom level 3 takeas about 1.5 GB of RAM;
#   and the app servers are configured to generate a few tiles in parallel.
#
#   Workaround that by adding 10GB of swap to those too.
#
#     sudo mkdir /mnt/swap
#     sudo dd if=/dev/zero of=/mnt/swap/10GB bs=1M count=10240
#     sudo chown root:root /mnt/swap/10GB 
#     sudo chmod 0600 /mnt/swap/10GB
#     sudo mkswap  /mnt/swap/10GB
#     sudo swapon /mnt/swap/10GB

