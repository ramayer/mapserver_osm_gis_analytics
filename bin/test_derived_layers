#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/default_environment.sh

# Federal "Gun Free School Zone .... 1000 feet"


layer=school_zones

if ( psql -q -c "select layer from additional_layers where layer='$layer'"  | grep -qw '$layer' ); 
then
    echo "Already had table $layer"
else
    echo "trying to create $layer"

    psql <<EOF
      DELETE FROM additional_layers WHERE (layer,source) = ('schools','derived from OSM');
      DELETE FROM additional_layers WHERE (layer,source) = ('school zones','derived from OSM');
      DELETE FROM additional_layers WHERE (layer,source) = ('lpr in school zones','derived from OSM');
      INSERT INTO additional_layers (layer,source) values ('schools','derived from OSM');
      INSERT INTO additional_layers (layer,source) values ('school zones','derived from OSM');
      INSERT INTO additional_layers (layer,source) values ('lpr in school zones','derived from OSM');

      INSERT INTO additional_polygons (layer,label,color,opacity,geom)
	     SELECT 'schools',
	             name,
	             CASE
	                 WHEN amenity = 'college'         THEN '#0000ff'
	                 WHEN amenity = 'university'      THEN '#0000ff'

	                 WHEN name ILIKE '%kidz%'         THEN '#00ff00'
	                 WHEN name ILIKE '%preschool%'    THEN '#00ff00'
	                 WHEN name ILIKE '%primary%'      THEN '#00ff00'
	                 WHEN name ILIKE '%nursery%'      THEN '#00ff00'
	                 WHEN name ILIKE '%montessori%'   THEN '#00ff00'
	                 WHEN name ILIKE '%Elem%'         THEN '#00ff00'
	                 WHEN name ILIKE '%k-9%'          THEN '#00ff00'
	                 WHEN name ILIKE '%k-8%'          THEN '#00ff00'
	                 WHEN name ILIKE '%Grundschule%'  THEN '#00ff00'
	                 WHEN name ILIKE '%Primaria%'     THEN '#00ff00'

	                 WHEN name ILIKE '%intermediate%' THEN '#eeee00'
	                 WHEN name ILIKE '%Middle%'       THEN '#eeee00'
	                 WHEN name ILIKE '%Junior high%'  THEN '#eeee00'
	                 WHEN name ILIKE '%Hauptschule%'  THEN '#eeee00'
	                 WHEN name ILIKE '%Realschule%'   THEN '#eeee00'
	                 WHEN name ILIKE '%Secundaria%'   THEN '#eeee00'


	                 WHEN name ILIKE '%academy%'      THEN '#ff0000'
	                 WHEN name ILIKE '%preparatory%'  THEN '#ff0000'
	                 WHEN name ILIKE '%high school%'  THEN '#ff0000'
	                 WHEN name ILIKE '%high'          THEN '#ff0000'
	                 WHEN name ILIKE '%Gymnasium%'    THEN '#ff0000'
	                 WHEN name ILIKE '%Preparatoria%' THEN '#ff0000'
	                 WHEN name ILIKE '%bachilleres%' THEN '#ff0000'

	                 WHEN name ILIKE '%college%'      THEN '#0000ff'
	                 WHEN name ILIKE '%adult%'        THEN '#0000ff'

	                 ELSE                                 '#ff00ff'
	             END,
	             70,
		     ST_Multi(ST_Transform(ST_Union(way),3857))
	      FROM planet_osm_polygon
	      WHERE amenity in ('school','college','university')
	      GROUP BY amenity, name, st_xmin(way)::int/10000,st_xmin(way)::int/10000
	      ;

      INSERT INTO additional_polygons (layer,label,color,opacity,geom)
	     SELECT 'school zones',
	             label || ' school zone',
	             color,
	             20,
 		     ST_Multi(ST_Difference(ST_Buffer(geom,304.8),geom))
	      FROM additional_polygons
	      WHERE layer='schools' and ST_isvalid(geom);

      INSERT INTO additional_points (layer,label,color,geom)
          select 'lpr in school zones',
                 lpr.label,
                 sch.color,
                 lpr.geom
          FROM (select * from additional_polygons where layer='opd_lpr') as lpr
          JOIN (select * from additional_polygons where layer='school_zones') as sch
            ON ST_Intersects(sch.geom,  lpr.geom);

      INSERT INTO additional_points (layer,label,color,geom)
          select 'lpr in school zones',
                 lpr.label,
                 sch.color,
                 lpr.geom
          FROM (select * from additional_points where layer='opd_lpr') as lpr
          JOIN (select * from additional_polygons where layer='school zones') as sch
            ON ST_Intersects(sch.geom,  lpr.geom);

EOF


    psql <<EOF
      DELETE FROM additional_layers WHERE (layer,source) = ('starbucks','derived from OSM');
      DELETE FROM additional_layers WHERE (layer,source) = ('walking distance from starbucks','derived from OSM');
      INSERT INTO additional_layers (layer,source) values ('starbucks','derived from OSM');
      INSERT INTO additional_layers (layer,source) values ('walking distance from starbucks','derived from OSM');

      INSERT INTO additional_polygons (layer,label,color,opacity,geom)
	     SELECT 'starbucks',
	             name,
	             '#00ff00',
	             70,
		     ST_Multi(ST_Transform(way,3857))
	      FROM planet_osm_polygon
	      WHERE name = 'Starbucks'
	      ;

      INSERT INTO additional_polygons (layer,label,color,opacity,geom)
	     SELECT 'starbucks',
	             name,
	             '#00ff00',
	             70,
		     ST_Multi(ST_Transform(ST_Buffer(way,20),3857))
	      FROM planet_osm_point
	      WHERE name = 'Starbucks'
	      ;


      INSERT INTO additional_polygons (layer,label,color,opacity,geom)
	     SELECT 'walking distance from starbucks',
	             'area around starbucsk',
	             color,
	             20,
 		     ST_Multi(ST_Difference(ST_Buffer(geom,304.8),geom))
	      FROM additional_polygons
	      WHERE layer='starbucks' and ST_isvalid(geom);

EOF




# TODO report this bug
#   ERROR:  GEOSDifference: TopologyException: Input geom 1 is invalid: Self-intersection at or near point 429083.64189366973 5406516.1215057513 at 429083.64189366973 5406516.1215057513
# which occurs when the expession
# 		     ST_Multi(ST_Difference(ST_Buffer(geom,304.8),geom))
# is used on schools instead of 
#                    ST_Multi(ST_Buffer(geom,304.8),geom)
# create table debug_another_broken_poly as select st_union(way) as geom from planet_osm_polygon where osm_id in (76015175,76015844,76016259,76015799);

# gis=# create table debug_5 as select name,
#                      array_agg(osm_id)::text as c,
#                      ST_Multi(ST_Transform(ST_Union(way),3857)) as geom
#               FROM planet_osm_polygon
#               WHERE osm_id in (76015175,76015844,76016259,76015799)
#               GROUP BY amenity, name, st_xmin(way)::int/10000,st_xmin(way)::int/10000;
# 
# gis=# select 		     ST_Multi(ST_Difference(ST_Buffer(geom,304.8),geom)) from debug_5;
# ERROR:  GEOSDifference: TopologyException: Input geom 1 is invalid: Self-intersection at or near point 429083.64189366973 5406516.1215057513 at 429083.64189366973 5406516.1215057513



# for the shading --- see http://wistia.com/blog/heatmaps-for-colorblindness


fi

