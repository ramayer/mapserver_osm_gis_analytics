---

  # daemon, for the delete script

  - name: ensure apache, and the components needed for mod-mapcache is at the latest version
    apt: pkg={{ item }} state=latest
    with_items:
      - apache2
      - proj-bin
      - libproj9
      - libproj-dev
      - libapache2-mod-mapcache
      - mapcache-tools
      - haproxy
      - daemon

  - name: Apache | Enable module | Enable $module
    command: a2enmod {{ item }} creates=/etc/apache2/mods-enabled/{{ item }}.load
    notify:
      - restart apache
    with_items:
      - expires
      - headers
      - mapcache
      - rewrite
      - proxy
      - proxy_http
      - ssl
      - status

  - name: ensure apache is enabled at boot
    service: name=apache2 enabled=yes

  - name: ensure haproxy is enabled at boot
    service: name=haproxy enabled=yes

  - name: write the haproxy config file
    template: src=etc/haproxy/haproxy.cfg dest=/etc/haproxy/haproxy.cfg
    notify:
      - restart haproxy

  - name: Check for https certificates
    local_action: stat path={{ lookup('env','HOME') }}/certs/etc/ssl/mapcache
    register: stat_https_certs

  - name: write the http config file
    template: src={{ item }} dest=/etc/apache2/sites-available/{{ item }}
    with_items:
      - 010-mapcache-http.conf

  - name: write the https config file
    template: src={{ item }}.j2 dest=/etc/apache2/sites-available/{{ item }}
    with_items:
      - 020-mapcache-https.conf

  - name: Enable http sites
    command: a2ensite {{ item }} creates=/etc/apache2/sites-enabled/{{ item }}
    with_items:
      - 010-mapcache-http.conf
      - 020-mapcache-https.conf

  - name: Disable default sites
    command: a2dissite {{ item }} removes=/etc/apache2/sites-enabled/{{ item }}
    with_items:
      - 000-default.conf

  - name: Make sure directories exist for mapcache
    file: dest={{ item }} mode=775 state=directory owner={{ lookup("env","USER") }}
    with_items:
      - /etc/mapcache
      - /var/www/mapcache

  # Seems an ansible bug -- if I use 
  #    synchronize: src=roles/mapcache/files/var/www/test_maps/. dest=/var/www/mapcache/test_maps/.
  # the destination acts like /var/www/mapcache/test_maps/test_maps/.
  # 
  # - name: copy test pages for maps
  #   synchronize: src={{ lookup('pipe','pwd') }}/roles/mapcache/files/var/www/test_maps/. dest=/var/www/mapcache/test_maps/.

  - name: Put a temporary mapcache config file in /etc/mapcache/mapcache.xml
    command: creates=/etc/mapcache/mapcache.xml  cp /usr/share/doc/libapache2-mod-mapcache/examples/mapcache.xml /etc/mapcache/mapcache.xml

  - name: Make sure certs directory exists
    file: dest=/etc/ssl/mapcache mode=755 state=directory owner={{ lookup('env','USER') }}

  - name: Install certs
    become: no
    synchronize: src={{ lookup('env','HOME') }}/certs/etc/ssl/mapcache/. dest=/etc/ssl/mapcache/.
    when: stat_https_certs.stat.exists == true

# WARNING - WITH SOME VERSIONS OF ANSIBLE, THE "/." AT THE END OF THE LINE
# IS LOST IF YOU USE THE "~".
#    synchronize: src=~/certs/etc/ssl/moga/. dest=/etc/ssl/moga/.
# This causes the arguments to act like
#    synchronize: src=~/certs/etc/ssl/moga dest=/etc/ssl/moga/.
# which behaves very differently!!!!

